/*
 * This file is generated by jOOQ.
 */
package com.steeplesoft.simplesec.app.model.jooq.tables.records;


import com.steeplesoft.simplesec.app.model.jooq.tables.JwtMetadata;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JwtMetadataRecord extends UpdatableRecordImpl<JwtMetadataRecord> implements Record4<String, String, Long, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.jwt_metadata.id</code>.
     */
    public JwtMetadataRecord setId(@Nonnull String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.jwt_metadata.id</code>.
     */
    @NotNull
    @Nonnull
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.jwt_metadata.user_name</code>.
     */
    public JwtMetadataRecord setUserName(@Nullable String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.jwt_metadata.user_name</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.jwt_metadata.expiry_date</code>.
     */
    public JwtMetadataRecord setExpiryDate(@Nullable Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.jwt_metadata.expiry_date</code>.
     */
    @Nullable
    public Long getExpiryDate() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.jwt_metadata.revoked</code>.
     */
    public JwtMetadataRecord setRevoked(@Nullable Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.jwt_metadata.revoked</code>.
     */
    @Nullable
    public Boolean getRevoked() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<String, String, Long, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<String, String, Long, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<String> field1() {
        return JwtMetadata.JWT_METADATA.ID;
    }

    @Override
    @Nonnull
    public Field<String> field2() {
        return JwtMetadata.JWT_METADATA.USER_NAME;
    }

    @Override
    @Nonnull
    public Field<Long> field3() {
        return JwtMetadata.JWT_METADATA.EXPIRY_DATE;
    }

    @Override
    @Nonnull
    public Field<Boolean> field4() {
        return JwtMetadata.JWT_METADATA.REVOKED;
    }

    @Override
    @Nonnull
    public String component1() {
        return getId();
    }

    @Override
    @Nullable
    public String component2() {
        return getUserName();
    }

    @Override
    @Nullable
    public Long component3() {
        return getExpiryDate();
    }

    @Override
    @Nullable
    public Boolean component4() {
        return getRevoked();
    }

    @Override
    @Nonnull
    public String value1() {
        return getId();
    }

    @Override
    @Nullable
    public String value2() {
        return getUserName();
    }

    @Override
    @Nullable
    public Long value3() {
        return getExpiryDate();
    }

    @Override
    @Nullable
    public Boolean value4() {
        return getRevoked();
    }

    @Override
    @Nonnull
    public JwtMetadataRecord value1(@Nonnull String value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtMetadataRecord value2(@Nullable String value) {
        setUserName(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtMetadataRecord value3(@Nullable Long value) {
        setExpiryDate(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtMetadataRecord value4(@Nullable Boolean value) {
        setRevoked(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtMetadataRecord values(@Nonnull String value1, @Nullable String value2, @Nullable Long value3, @Nullable Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JwtMetadataRecord
     */
    public JwtMetadataRecord() {
        super(JwtMetadata.JWT_METADATA);
    }

    /**
     * Create a detached, initialised JwtMetadataRecord
     */
    public JwtMetadataRecord(@Nonnull String id, @Nullable String userName, @Nullable Long expiryDate, @Nullable Boolean revoked) {
        super(JwtMetadata.JWT_METADATA);

        setId(id);
        setUserName(userName);
        setExpiryDate(expiryDate);
        setRevoked(revoked);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JwtMetadataRecord
     */
    public JwtMetadataRecord(com.steeplesoft.simplesec.app.model.jooq.tables.pojos.JwtMetadata value) {
        super(JwtMetadata.JWT_METADATA);

        if (value != null) {
            setId(value.getId());
            setUserName(value.getUserName());
            setExpiryDate(value.getExpiryDate());
            setRevoked(value.getRevoked());
            resetChangedOnNotNull();
        }
    }
}
