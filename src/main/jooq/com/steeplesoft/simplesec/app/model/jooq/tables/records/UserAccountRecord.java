/*
 * This file is generated by jOOQ.
 */
package com.steeplesoft.simplesec.app.model.jooq.tables.records;


import com.steeplesoft.simplesec.app.model.jooq.tables.UserAccount;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.validation.constraints.Size;

import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record13<Long, String, String, String, String, String, String, String, String, String, OffsetDateTime, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_account.id</code>.
     */
    public UserAccountRecord setId(@Nullable Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.id</code>.
     */
    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_account.user_name</code>.
     */
    public UserAccountRecord setUserName(@Nullable String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.user_name</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_account.password</code>.
     */
    public UserAccountRecord setPassword(@Nullable String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.password</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_account.phone_number</code>.
     */
    public UserAccountRecord setPhoneNumber(@Nullable String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.phone_number</code>.
     */
    @Size(max = 50)
    @Nullable
    public String getPhoneNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user_account.address1</code>.
     */
    public UserAccountRecord setAddress1(@Nullable String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.address1</code>.
     */
    @Size(max = 100)
    @Nullable
    public String getAddress1() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user_account.address2</code>.
     */
    public UserAccountRecord setAddress2(@Nullable String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.address2</code>.
     */
    @Size(max = 100)
    @Nullable
    public String getAddress2() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.user_account.city</code>.
     */
    public UserAccountRecord setCity(@Nullable String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.city</code>.
     */
    @Size(max = 100)
    @Nullable
    public String getCity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.user_account.state</code>.
     */
    public UserAccountRecord setState(@Nullable String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.state</code>.
     */
    @Size(max = 10)
    @Nullable
    public String getState() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.user_account.zip_code</code>.
     */
    public UserAccountRecord setZipCode(@Nullable String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.zip_code</code>.
     */
    @Size(max = 10)
    @Nullable
    public String getZipCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.user_account.roles</code>.
     */
    public UserAccountRecord setRoles(@Nullable String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.roles</code>.
     */
    @Size(max = 1000)
    @Nullable
    public String getRoles() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.user_account.creation_date</code>.
     */
    public UserAccountRecord setCreationDate(@Nullable OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.creation_date</code>.
     */
    @Nullable
    public OffsetDateTime getCreationDate() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>public.user_account.fail_attempts</code>.
     */
    public UserAccountRecord setFailAttempts(@Nullable Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.fail_attempts</code>.
     */
    @Nullable
    public Integer getFailAttempts() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.user_account.locked_until</code>.
     */
    public UserAccountRecord setLockedUntil(@Nullable Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.locked_until</code>.
     */
    @Nullable
    public Long getLockedUntil() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row13<Long, String, String, String, String, String, String, String, String, String, OffsetDateTime, Integer, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row13<Long, String, String, String, String, String, String, String, String, String, OffsetDateTime, Integer, Long> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Long> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    @Override
    @Nonnull
    public Field<String> field2() {
        return UserAccount.USER_ACCOUNT.USER_NAME;
    }

    @Override
    @Nonnull
    public Field<String> field3() {
        return UserAccount.USER_ACCOUNT.PASSWORD;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return UserAccount.USER_ACCOUNT.PHONE_NUMBER;
    }

    @Override
    @Nonnull
    public Field<String> field5() {
        return UserAccount.USER_ACCOUNT.ADDRESS1;
    }

    @Override
    @Nonnull
    public Field<String> field6() {
        return UserAccount.USER_ACCOUNT.ADDRESS2;
    }

    @Override
    @Nonnull
    public Field<String> field7() {
        return UserAccount.USER_ACCOUNT.CITY;
    }

    @Override
    @Nonnull
    public Field<String> field8() {
        return UserAccount.USER_ACCOUNT.STATE;
    }

    @Override
    @Nonnull
    public Field<String> field9() {
        return UserAccount.USER_ACCOUNT.ZIP_CODE;
    }

    @Override
    @Nonnull
    public Field<String> field10() {
        return UserAccount.USER_ACCOUNT.ROLES;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field11() {
        return UserAccount.USER_ACCOUNT.CREATION_DATE;
    }

    @Override
    @Nonnull
    public Field<Integer> field12() {
        return UserAccount.USER_ACCOUNT.FAIL_ATTEMPTS;
    }

    @Override
    @Nonnull
    public Field<Long> field13() {
        return UserAccount.USER_ACCOUNT.LOCKED_UNTIL;
    }

    @Override
    @Nullable
    public Long component1() {
        return getId();
    }

    @Override
    @Nullable
    public String component2() {
        return getUserName();
    }

    @Override
    @Nullable
    public String component3() {
        return getPassword();
    }

    @Override
    @Nullable
    public String component4() {
        return getPhoneNumber();
    }

    @Override
    @Nullable
    public String component5() {
        return getAddress1();
    }

    @Override
    @Nullable
    public String component6() {
        return getAddress2();
    }

    @Override
    @Nullable
    public String component7() {
        return getCity();
    }

    @Override
    @Nullable
    public String component8() {
        return getState();
    }

    @Override
    @Nullable
    public String component9() {
        return getZipCode();
    }

    @Override
    @Nullable
    public String component10() {
        return getRoles();
    }

    @Override
    @Nullable
    public OffsetDateTime component11() {
        return getCreationDate();
    }

    @Override
    @Nullable
    public Integer component12() {
        return getFailAttempts();
    }

    @Override
    @Nullable
    public Long component13() {
        return getLockedUntil();
    }

    @Override
    @Nullable
    public Long value1() {
        return getId();
    }

    @Override
    @Nullable
    public String value2() {
        return getUserName();
    }

    @Override
    @Nullable
    public String value3() {
        return getPassword();
    }

    @Override
    @Nullable
    public String value4() {
        return getPhoneNumber();
    }

    @Override
    @Nullable
    public String value5() {
        return getAddress1();
    }

    @Override
    @Nullable
    public String value6() {
        return getAddress2();
    }

    @Override
    @Nullable
    public String value7() {
        return getCity();
    }

    @Override
    @Nullable
    public String value8() {
        return getState();
    }

    @Override
    @Nullable
    public String value9() {
        return getZipCode();
    }

    @Override
    @Nullable
    public String value10() {
        return getRoles();
    }

    @Override
    @Nullable
    public OffsetDateTime value11() {
        return getCreationDate();
    }

    @Override
    @Nullable
    public Integer value12() {
        return getFailAttempts();
    }

    @Override
    @Nullable
    public Long value13() {
        return getLockedUntil();
    }

    @Override
    @Nonnull
    public UserAccountRecord value1(@Nullable Long value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value2(@Nullable String value) {
        setUserName(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value3(@Nullable String value) {
        setPassword(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value4(@Nullable String value) {
        setPhoneNumber(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value5(@Nullable String value) {
        setAddress1(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value6(@Nullable String value) {
        setAddress2(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value7(@Nullable String value) {
        setCity(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value8(@Nullable String value) {
        setState(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value9(@Nullable String value) {
        setZipCode(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value10(@Nullable String value) {
        setRoles(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value11(@Nullable OffsetDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value12(@Nullable Integer value) {
        setFailAttempts(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord value13(@Nullable Long value) {
        setLockedUntil(value);
        return this;
    }

    @Override
    @Nonnull
    public UserAccountRecord values(@Nullable Long value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable String value5, @Nullable String value6, @Nullable String value7, @Nullable String value8, @Nullable String value9, @Nullable String value10, @Nullable OffsetDateTime value11, @Nullable Integer value12, @Nullable Long value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(@Nullable Long id, @Nullable String userName, @Nullable String password, @Nullable String phoneNumber, @Nullable String address1, @Nullable String address2, @Nullable String city, @Nullable String state, @Nullable String zipCode, @Nullable String roles, @Nullable OffsetDateTime creationDate, @Nullable Integer failAttempts, @Nullable Long lockedUntil) {
        super(UserAccount.USER_ACCOUNT);

        setId(id);
        setUserName(userName);
        setPassword(password);
        setPhoneNumber(phoneNumber);
        setAddress1(address1);
        setAddress2(address2);
        setCity(city);
        setState(state);
        setZipCode(zipCode);
        setRoles(roles);
        setCreationDate(creationDate);
        setFailAttempts(failAttempts);
        setLockedUntil(lockedUntil);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(com.steeplesoft.simplesec.app.model.jooq.tables.pojos.UserAccount value) {
        super(UserAccount.USER_ACCOUNT);

        if (value != null) {
            setId(value.getId());
            setUserName(value.getUserName());
            setPassword(value.getPassword());
            setPhoneNumber(value.getPhoneNumber());
            setAddress1(value.getAddress1());
            setAddress2(value.getAddress2());
            setCity(value.getCity());
            setState(value.getState());
            setZipCode(value.getZipCode());
            setRoles(value.getRoles());
            setCreationDate(value.getCreationDate());
            setFailAttempts(value.getFailAttempts());
            setLockedUntil(value.getLockedUntil());
            resetChangedOnNotNull();
        }
    }
}
